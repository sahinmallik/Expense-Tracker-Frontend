{"ast":null,"code":"var _jsxFileName = \"/Users/sahinmallik/Desktop/WEB-DEV/React/Expense-Tracker-Frontend/src/components/Expenses/ExpenseItem.js\";\nimport React from \"react\";\nimport Card from \"../UI/card\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport \"./ExpenseItem.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseItem = props => {\n  // the props are coming from Expenses.js\n  // const [title, setTitle] = useState(props.title); //useState return two value one is the original value and the other one is the upadated function which is to us to assign the new value to a certain component. React normally do not eavluate a component after changed in variable or something else but using useState function the React revaluate the component and upadate the component. And it re-evaluate that component in which the useState function registered and it will not evalutae any other component.\n  // const clickHandler = () => {\n  //   let updatedTitle = prompt(\"Enter Your Own Title!\");\n  //   if (updatedTitle === \"\") {\n  //     return;\n  //   } else {\n  //     setTitle(updatedTitle);\n  //     console.log(title);\n  //   }\n  // };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expense-item\",\n      children: [/*#__PURE__*/_jsxDEV(ExpenseDate, {\n        date: props.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-item__description\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"expense-item__price\",\n          children: [\"$ \", props.amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ExpenseItem;\nexport default ExpenseItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseItem\");","map":{"version":3,"sources":["/Users/sahinmallik/Desktop/WEB-DEV/React/Expense-Tracker-Frontend/src/components/Expenses/ExpenseItem.js"],"names":["React","Card","ExpenseDate","ExpenseItem","props","date","title","amount"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,mBAAP;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,IAAI,EAAEA,KAAK,CAACC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA,gCACE;AAAA,oBAAKD,KAAK,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA,2BAAwCF,KAAK,CAACG,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAzBD;;KAAMJ,W;AA2BN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport Card from \"../UI/card\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport \"./ExpenseItem.css\";\n\nconst ExpenseItem = (props) => {\n  // the props are coming from Expenses.js\n  // const [title, setTitle] = useState(props.title); //useState return two value one is the original value and the other one is the upadated function which is to us to assign the new value to a certain component. React normally do not eavluate a component after changed in variable or something else but using useState function the React revaluate the component and upadate the component. And it re-evaluate that component in which the useState function registered and it will not evalutae any other component.\n\n  // const clickHandler = () => {\n  //   let updatedTitle = prompt(\"Enter Your Own Title!\");\n  //   if (updatedTitle === \"\") {\n  //     return;\n  //   } else {\n  //     setTitle(updatedTitle);\n  //     console.log(title);\n  //   }\n  // };\n\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date} />\n        <div className=\"expense-item__description\">\n          <h2>{props.title}</h2>\n          <div className=\"expense-item__price\">$ {props.amount}</div>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ExpenseItem;\n"]},"metadata":{},"sourceType":"module"}